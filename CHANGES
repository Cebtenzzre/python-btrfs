python-btrfs v8, Jul 18 2017
  * Easier handling of multiple appended data structures of the dir item and
    inode ref families easier. (not backwards compatible!)
  * Don't keep metadata page transid value when retrieving a BlockGroupItem.
    This was introduced in v4, but it's not technically correct.
  * Improve architecture dependent ioctl number handling.
  * Examples added:
    - Do a custom sorted btrfs balance, working from the least used block
      group to the most used, stopping at some usage value.
    - Calculate an inode extref hash from an inode number and file name.
  * Fixes:
    - Another unfortunate typo in __str__ methods of an object

python-btrfs v7, May 28 2017
  * Also unpack bitmaps when showing the free space tree
  * Fixes:
    - A few unfortunate typos in __str__ methods of objects
  * Examples added:
    - Show background subvolume removal progress.
    - Show metadata tree sizes in bytes and amount of tree blocks.
    - Show file info by tree and inode number

python-btrfs v6, Mar 24 2017
  * Only Python 3 supported from now on
  * IOCTLs: INO_LOOKUP, LOGICAL_INO, TREE_SEARCH_V2, IOC_BALANCE_V2,
    IOC_BALANCE_CTL, BALANCE_PROGRESS
  * Data structures: InodeRef, DirItem, DirIndex, XAttrItem,
    FileExtentItem, InodeExtref
  * Add a helper to retrieve free space tree extents
  * Check device error counters in the nagios plugin
  * Fixes:
    - Not loading backreferences for extents was broken
    - Handle IOCTL differences for different architectures
  * Examples added:
    - Show directory contents (both the index and namehash list)
    - Try to show a filename for data extents
    - Show file information (inode, xattrs, etc, and list of extents)
    - Show subvolumes

python-btrfs v5, Jan 14 2017
  * Revamp and fix loading of extent backreferences.
  * Explode when detecting a non x86_64 arch.
  * Add a crc32c implementation and example script to create
    a dir_item offset hash.

python-btrfs v4, Dec 18 2016
  * Bump/inverse versioning, there will never be a v1.0, just keep
    developing and releasing. \:D/
  * IOCTLs: LOGICAL_INO
  * New datastructures: InodeItem, RootItem, DiskKey, TimeSpec
  * Add all constants to pretty print tree keys
  * Behaviour change: don't load extent refs by default
  * Keep transid value when retrieving a BlockGroupItem
  * Known issue:
    - SHARED_BLOCK_REF and TREE_BLOCK_REF are missing in extent refs

python-btrfs 0.3, Nov 15 2016
  * Showing the contents of metadata block groups
  * Renamed datastructures: DevItem, BlockGroupItem, ExtentItem
  * New datastructures: TreeBlockInfo, MetaDataItem, TreeBlockRef,
    SharedBlockRef, DevStats
  * IOCTLs: IOC_GET_DEV_STATS
  * Fixes:
    - Python 3 compatibility, again

python-btrfs 0.2, Jun 28 2016
  * Datastructures: DevExtent
  * Python 3 compatibility
  * Utils: lookup total filesystem usage (incl. unallocatable space)
  * Example nagios nrpe monitoring plugin
  * Fixes:
    - Optimize block group search

python-btrfs 0.1, Jun 21 2016
  * IOCTLs: IOC_SPACE_INFO, IOC_TREE_SEARCH, IOC_FS_INFO, IOC_DEV_INFO
  * Datastructures: Device (dev_item), Chunk, Stripe, BlockGroup,
    Extent, ExtentDataRef, SharedDataRef
  * btrfs.FileSystem main entry point for usage
  * Handing of the search Key (objectid, type, offset)
  * Utils: pretty printing amounts of bytes and block group /
    chunk types and profiles (like, MetaData, RAID1 etc...),
    determine wasted (unallocatable) space for RAID0, RAID1
  * Example snippets using all functionality
  * Example munin monitoring plugin
